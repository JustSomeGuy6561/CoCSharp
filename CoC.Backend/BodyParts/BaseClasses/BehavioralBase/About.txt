Behavioral Base:

Any single body part that's actions are defined by an additional class, henceforth known as a behavior or type. For example, the behavior of the Arm class is determined by what type of Arm
you currently have, or ArmType. A lizard arm, for example, will have different characteristics than a cat arm. This is the base class, only providing the barest of data. Derived instances
provide additional functionality, which should be used if possible.

If you have a body part that is integral into creating a creature and cannot be determined without saving it, use the saveable behavior part.
If you need something to hold multiple body parts, use simple saveable part it provides all you need to do so.
If your body part is not determined by a behavior (like butt, hips, etc.) use the SimpleSaveablePart.

If you only need a helper body part which can be assigned to other parts in order to extend their behavior, use this. These helper parts MUST be determined without needing save data.

Implementations:

The current implementation of this is Hands and Feet. Both extend their respective classes (Arms and LowerBody), yet these classes can determine which of these to use without any extra data.
In this case, Cat arms know they have cat paws, and cannot have any other type of hand, yet by including this they can check their hand data without having to do it within arms.
This also allows multiple arms to use the same type of hand, though at current implementation this does not happen.

Also worth noting is the edge case: Epidermis. It needs to be saved, but it helps make up other body parts. Rather than create a base class for this edge case, i simply implemented it as a
child of this class and added save functionality manually. Realistically, i can't see another edge case like it, but i could be wrong.