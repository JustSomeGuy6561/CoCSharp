<UserControl x:Class="CoCWinDesktop.CustomControls.OptionRowButtons"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CoCWinDesktop.CustomControls"
			 xmlns:Help="clr-namespace:CoCWinDesktop.Helpers"
			 xmlns:Conv="clr-namespace:CoCWinDesktop.Converters"
             mc:Ignorable="d" 
			 d:DesignWidth="1000"
			 d:DataContext="{d:DesignInstance Type=Help:OptionsRowButtonWrapper}">
	<UserControl.Resources>
		<Style TargetType="{x:Type Button}" BasedOn="{StaticResource CoCButton}">
			<Setter Property="Margin" Value="5,0,5,0"/>
		</Style>
		<Conv:VisibilityFromBoolCollapsed x:Key="IsCollapsed"/>
		<Conv:AddValueConverter x:Key="Adder"/>
		<Conv:SubtractValueConverter x:Key="Subtractor"/>
	</UserControl.Resources>
	<Grid Margin="0, 0,0,0">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition/>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="Auto"/>
		</Grid.ColumnDefinitions>
		<!-- Bind the text to exposed property for property name. Bind fontsize to runner size+10-->
		<TextBlock Style="{StaticResource SmallHeaderText}" HorizontalAlignment="Stretch" TextWrapping="Wrap" VerticalAlignment="Top" Grid.Column="0" Grid.Row="0" 
				   TextAlignment="Right" Text="{Binding OptionName}" FontWeight="Bold"/>
		<!-- Bind content to text for it. Bind visibility of second item to enum declaring state - if !local, enable unset. else collapse it. -->
		<!-- Bind commands, which set the variable to true, null, false, respectively. when set, commands should update the description. -->
		<Button Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Content="{Binding EnabledBtn}" HorizontalAlignment="Center" VerticalAlignment="Center" 
				Background="{StaticResource Button0Image}" Command="{Binding EnableCommand}" />
		<Button Grid.Column="2" Grid.Row="0" Grid.RowSpan="2"  Content="Unset" HorizontalAlignment="Center" VerticalAlignment="Center" Background="{StaticResource Button1Image}" 
				Command="{Binding ClearCommand}" Visibility="{Binding ClearVisible, Converter={StaticResource IsCollapsed}}" />
		<Button Grid.Column="3" Grid.Row="0" Grid.RowSpan="2" Content="{Binding DisabledBtn}" HorizontalAlignment="Center" VerticalAlignment="Center" 
				Background="{StaticResource Button2Image}" Command="{Binding DisableCommand}"/>
		<!-- bind text to description. Note that there's no two-way binding here, so we'll need to use the button commands to fake it. -->
		<TextBlock Style="{StaticResource StandardText}" Grid.Column="0" Grid.Row="1" TextWrapping="Wrap" HorizontalAlignment="Stretch" VerticalAlignment="Center" 
			TextAlignment="Right" Text="{Binding currentDescription}"/>
	</Grid>
</UserControl>
